<?xml version="1.0"?>
<project name="restcomm.camelgw.release" default="release-with-jss7-and-ras" basedir=".">
	<property environment="sys"/>
    <property name="release.dir" location="${ant.file.restcomm.camelgw.release}/../target" />
	<property name="base.dir" location="${ant.file.restcomm.camelgw.release}/.." />
	<property name="docs.dir" location="${release.dir}/docs" />
	<property name="bundle.docs.dir" location="${base.dir}/docs-bundle" />
	<property name="checkout.dir" value="${base.dir}/checkout" />
	<property name="checkout.restcomm-slee.dir" value="${checkout.dir}/restcomm-slee" />
	<property name="checkout.restcomm-jss7.dir" value="${checkout.dir}/restcomm-jss7" />
	<property name="checkout.restcomm-camel.dir" value="${base.dir}/.." />
	<property name="checkout.restcomm-slee.jss7-build.dir" value="${checkout.dir}/restcomm-slee.jss7-build" />
	<property name="checkout.restcomm-slee.http-build.dir" value="${checkout.dir}/restcomm-slee.http-build" />

	<!-- version properties-->
	<!-- //** change this properties from CLI to build specific versions-->
	<!-- Eg: 
			ant -Drestcomm.camel.git.tag=ts115ga -Drestcomm.camel.release.version=6.1.5.GA-RestComm
		-->
	<property name="restcomm.camel.git.tag" value="master"/>
	<property name="restcomm.camel.release.version" value="3.0.0-SNAPSHOT"/>
	<!-- **//-->

	<property name="restcomm-slee.version" value="2.8.36" />
	<property name="restcomm-slee.build-number" value="73" />

	<property name="restcomm-jss7.build-number" value="1336" />
	<property name="restcomm-jss7.version" value="3.0.${restcomm-jss7.build-number}" />
	<property name="restcomm-jss7.timestamp" value="1602171452" />	

	<property name="restcomm-slee.ss7.tag" value="2.8.26" />

	<property name="restcomm-slee.http.ra.tag" value="2.8.5" />
	<property name="restcomm-slee.http.ra.version" value="${restcomm-slee.http.ra.tag}" />

	<!--GET RestComm-Slee & RestComm-jss7 - properties-->
	<property name="cloudbees.url" value="https://restcomm.ci.cloudbees.com" />
	<property name="restcomm-slee.download.distro.name" value="restcomm-slee-${restcomm-slee.version}" />
	<property name="restcomm-slee.download.distro.file" value="${restcomm-slee.download.distro.name}.${restcomm-slee.build-number}.zip" />
	<property name="restcomm-slee.download.url" value="${cloudbees.url}/job/Restcomm-JAIN-SLEE-Release/${restcomm-slee.build-number}/artifact/release/${restcomm-slee.download.distro.file}" />
	<property name="restcomm-slee.distro.zip.path" value="${checkout.dir}/${restcomm-slee.download.distro.file}" />

	<property name="restcomm-jss7.download.distro.file" value="restcomm-jss7-${restcomm-jss7.version}-${restcomm-jss7.timestamp}.zip" />
	<property name="restcomm-jss7.download.url" value="${cloudbees.url}/job/Restcomm-jSS7/${restcomm-jss7.build-number}/artifact/release/${restcomm-jss7.download.distro.file}" />
	<property name="restcomm-jss7.distro.zip.path" value="${checkout.dir}/${restcomm-jss7.download.distro.file}" />


	<property name="release.build.goals" value="clean install dependency:tree"/>
	<property name="release.ts.deploy.goals" value="clean deploy"/>



	<condition property="mvn.executable" value="${sys.M2_HOME}\bin\mvn.bat" else="mvn">
		<os family="windows"/>
	</condition>

	<taskdef onerror="fail" resource="net/sf/antcontrib/antlib.xml">
		<classpath>
			<pathelement location="${ant.file.restcomm.camelgw.release}/../ant-contrib-1.0b3.jar" />
		</classpath>
	</taskdef>

	<target name="clean">
		<delete dir="${release.dir}"/>
		<delete dir="${base.dir}/checkout"/>
	</target>


	<target name="release" depends="get-deps,extract-deps,clean-up-restcomm-slee,build-camel, build-with-jss7-ras, build-with-http-ras, copy-camel, build-docs, copy-docs, make-final-zip,bundle-documentation" />

	<target name="release-with-jss7-and-ras" depends="build-with-jss7-ras, build-with-http-ras, release"/>

	<target name="build-with-jss7-ras">
		<echo>Clone RestComm JainSlee.jss7 (JSS7 RA's)</echo>

		<exec failonerror="true" executable="git">
			<arg value="clone" />
			<arg value="https://github.com/RestComm/jain-slee.ss7.git" />
			<arg value="${checkout.restcomm-slee.jss7-build.dir}" />
		</exec>

		<exec executable="git" dir="${checkout.restcomm-slee.jss7-build.dir}">
			<arg value="checkout" />
			<arg value="${restcomm-slee.ss7.tag}" />
		</exec>


		<echo>Building JainSlee.jss7 (JSS7 RA's) from sources</echo>

		<exec failonerror="true" executable="${mvn.executable}" dir="${checkout.restcomm-slee.jss7-build.dir}">
			<arg line="clean install -Pmaven-release -Dmaven.test.skip=true" />
		</exec>
	</target>

	<target name="build-with-http-ras">
		<echo>Clone RestComm JainSlee.http (Http RA's)</echo>

		<exec failonerror="true" executable="git">
			<arg value="clone" />
			<arg value="https://github.com/restcomm/jain-slee.http.git" />
			<arg value="${checkout.restcomm-slee.http-build.dir}" />
		</exec>

		<exec executable="git" dir="${checkout.restcomm-slee.http-build.dir}">
			<arg value="checkout" />
			<arg value="${restcomm-slee.http.ra.tag}" />
		</exec>

		<echo>Building JainSlee.http (Http RA's) from sources</echo>

		<exec failonerror="true" executable="${mvn.executable}" dir="${checkout.restcomm-slee.http-build.dir}">
			<arg line="clean install -Prelease -Dmaven.test.skip=true" />
		</exec>
	</target>


	<target name="deploy">
		<ant antfile="${ant.file.restcomm.camelgw.release}" target="release">
			<property name="release.build.goals" value="${release.ts.deploy.goals}" />
		</ant>
	</target>



	<!--GET Map & RestComm-Slee & RestComm-jss7 - downloads-->

	<target name="get-deps" depends="get-restcomm-slee,get-restcomm-jss7" />
	<target name="extract-deps" depends="extract-restcomm-slee,extract-restcomm-jss7" />

	<available file="${restcomm-slee.distro.zip.path}" property="got.restcomm-slee" />
	<target name="get-restcomm-slee" unless="got.restcomm-slee">
		<echo>Downloading RestComm Slee version: ${restcomm-slee.version}</echo>
		<exec failonerror="true" executable="wget">
		    <arg value="${restcomm-slee.download.url}" />
		</exec>
		<move file="${base.dir}/${restcomm-slee.download.distro.file}" todir="${checkout.dir}"/>
	</target>

	<target name="extract-restcomm-slee" depends="get-restcomm-slee">
		<delete dir="${checkout.restcomm-slee.dir}" failonerror="false" />
		<unzip src="${restcomm-slee.distro.zip.path}" dest="${release.dir}"/>
        <copy todir="${release.dir}" failonerror="true">
                <fileset dir="${release.dir}/restcomm-slee-${restcomm-slee.version}.${restcomm-slee.build-number}">
                        <include name="**/*" />
                </fileset>
        </copy>
		<delete dir="${release.dir}/restcomm-slee-${restcomm-slee.version}.${restcomm-slee.build-number}" includeemptydirs="true" failonerror="false" verbose="false"/>
		<delete dir="${checkout.restcomm-slee.dir}/jboss-5.1.0.GA/server/all" includeemptydirs="true" failonerror="false" verbose="false"/>
	</target>
	
	<available file="${restcomm-jss7.distro.zip.path}" property="got.restcomm-jss7" />
	<target name="get-restcomm-jss7" unless="got.restcomm-jss7">
		<echo>Downloading RestComm JSS7 version: ${restcomm-jss7.version}</echo>
		<exec failonerror="true" executable="wget">
			<arg value="${restcomm-jss7.download.url}" />
		</exec>
		<move file="${base.dir}/${restcomm-jss7.download.distro.file}" todir="${checkout.dir}"/>
	</target>

	<target name="extract-restcomm-jss7" depends="get-restcomm-jss7">
		<delete dir="${checkout.restcomm-jss7.dir}" failonerror="false" />
		<unzip src="${restcomm-jss7.distro.zip.path}" dest="${checkout.restcomm-jss7.dir}"/>
		<move file="${checkout.restcomm-jss7.dir}/restcomm-jss7-${restcomm-jss7.version}-restcomm" tofile="${checkout.restcomm-jss7.dir}/restcomm-jss7-${restcomm-jss7.version}" failonerror="false"/>
	</target>


	<target name="clean-up-restcomm-slee">
		<mkdir dir="${release.dir}/jboss-5.1.0.GA/server/simulator"/>
		<copy todir="${release.dir}/jboss-5.1.0.GA/server/simulator" failonerror="true">
			<fileset dir="${release.dir}/jboss-5.1.0.GA/server/default">
				<include name="**" />
			</fileset>
		</copy>
		<delete dir="${release.dir}/jboss-5.1.0.GA/server/all" includeemptydirs="true" failonerror="true"/>
		<delete includeemptydirs="true" failonerror="true">
			<fileset dir="${release.dir}/docs/resources">
				<include name="**" />
			</fileset>
		</delete>
		<delete dir="${release.dir}/docs/enablers" includeemptydirs="true" failonerror="true" />
		<delete dir="${release.dir}/docs/examples" includeemptydirs="true" failonerror="true" />
		<delete includeemptydirs="true" failonerror="true">
			<fileset dir="${release.dir}/resources">
				<include name="**" />
			</fileset>
		</delete>
		<delete failonerror="true">
			<fileset dir="${release.dir}/jboss-5.1.0.GA/server/simulator/lib">
				<include name="**" />
			</fileset>
		</delete>
		<delete dir="${release.dir}/extra" includeemptydirs="true" failonerror="true" />
		<delete dir="${release.dir}/enablers" includeemptydirs="true" failonerror="true" />
		<delete dir="${release.dir}/examples" includeemptydirs="true" failonerror="true" />
		<delete file="${release.dir}/readme.txt" failonerror="true" />
		<delete file="${release.dir}/sources.zip" failonerror="true" />
		<delete dir="${release.dir}/jboss-5.1.0.GA/server/simulator/deploy/cluster" includeemptydirs="true" failonerror="true" />
		<delete dir="${release.dir}/jboss-5.1.0.GA/server/simulator/deploy/deploy.last" includeemptydirs="true" failonerror="true" />
		<delete dir="${release.dir}/jboss-5.1.0.GA/server/simulator/deploy/snmp-adaptor.sar" includeemptydirs="true" failonerror="true" />
		<delete dir="${release.dir}/jboss-5.1.0.GA/server/simulator/deploy/juddi-service.sar" includeemptydirs="true" failonerror="true" />
		<delete file="${release.dir}/jboss-5.1.0.GA/server/simulator/deploy/restcomm-slee/profiles-external-ds.xml" failonerror="true" />
		<delete file="${release.dir}/jboss-5.1.0.GA/server/simulator/deploy/restcomm-slee/META-INF/jboss-cache-config.xml" failonerror="true" />
		<delete file="${release.dir}/jboss-5.1.0.GA/server/simulator/iiop-service.xml" failonerror="true" />
		<delete file="${release.dir}/jboss-5.1.0.GA/server/simulator/conf/jacorb.properties" failonerror="true" />
		<delete file="${release.dir}/jboss-5.1.0.GA/server/simulator/deploy/iiop-service.xml" failonerror="true" />
		<delete dir="${release.dir}/jboss-5.1.0.GA/server/simulator/deploy-hasingleton/" includeemptydirs="true" failonerror="true" />
		<delete dir="${release.dir}/jboss-5.1.0.GA/server/simulator/farm/" includeemptydirs="true" failonerror="true" />
	</target>

	<target name="checkout-camel-persistence">
		<echo>Checking out CAMEL persistence branch</echo>
		<exec failonerror="true" executable="git">
			<arg value="clone" />
			<arg value="https://github.com/RestComm/camelgateway.git" />
			<arg value="${checkout.restcomm-camel.dir}" />
		</exec>
		<exec failonerror="true" executable="git">
			<arg value="--git-dir=${checkout.restcomm-camel.dir}/.git" />
			<arg value="--work-tree=${checkout.restcomm-camel.dir}" />
			<arg value="checkout" />
			<arg value="${restcomm.camel.git.tag}" />
		</exec>

	</target>

	<target name="build-camel">
		<exec failonerror="true" executable="${mvn.executable}" dir="${checkout.restcomm-camel.dir}">
			<arg line="${release.build.goals} -Dmaven.test.skip=true" />
		</exec>
		<exec failonerror="true" executable="${mvn.executable}" dir="${checkout.restcomm-camel.dir}/test">
			<arg line="${release.build.goals} -Dmaven.test.skip=true" />
		</exec>
	</target>


	<target name="copy-camel">
		<!--echo>Copy RestComm Map RA</echo>
        <copy todir="${release.dir}/resources/map" failonerror="true">
                <fileset dir="${base.dir}/map-ra/target/map-ts-ra">
                        <include name="**" />
                </fileset>
        </copy-->

		<echo>Copy CAMEL server</echo>
		<!--default-->
		<copy todir="${release.dir}/jboss-5.1.0.GA/server/default/deploy/restcomm-camel-gateway" failonerror="true">
			<fileset dir="${checkout.restcomm-camel.dir}/core/bootstrap/target/restcomm-camel-gateway">
				<include name="**" />
			</fileset>
		</copy>
		<!--RA's-->
		<copy file="${checkout.restcomm-slee.jss7-build.dir}/resources/cap/du/target/restcomm-slee-ra-cap-du-${restcomm-slee.ss7.tag}.jar" todir="${release.dir}/jboss-5.1.0.GA/server/default/deploy" failonerror="true" />
		<copy file="${checkout.restcomm-slee.http-build.dir}/resources/http-client/du/target/http-client-ra-DU-${restcomm-slee.http.ra.version}.jar" todir="${release.dir}/jboss-5.1.0.GA/server/default/deploy" failonerror="true" />
		<copy file="${checkout.restcomm-camel.dir}/core/slee/services-du/target/services-DU-${restcomm.camel.release.version}.jar" todir="${release.dir}/jboss-5.1.0.GA/server/default/deploy" failonerror="true" />
		<copy file="${checkout.restcomm-slee.http-build.dir}/resources/http-servlet/common/target/mobicents-slee-ra-http-servlet-common.jar" todir="${release.dir}/jboss-5.1.0.GA/server/default/deploy" failonerror="true" />
		<copy file="${checkout.restcomm-slee.http-build.dir}/resources/http-servlet/du/target/mobicents-slee-ra-http-servlet-DU-${restcomm-slee.http.ra.version}.jar" todir="${release.dir}/jboss-5.1.0.GA/server/default/deploy" failonerror="true" />

		<!--Others-->
		<!--copy file="${release.dir}/resources/map/restcomm-slee-ra-map-du-6.2.0.GA-RestComm.jar" todir="${release.dir}/jboss-5.1.0.GA/server/default/deploy" failonerror="true" /-->
		<!--copy file="${checkout.restcomm-camel.dir}/management/ui-management/target/camel-management.war" todir="${release.dir}/jboss-5.1.0.GA/server/default/deploy" failonerror="true" />
	    <copy file="${checkout.restcomm-camel.dir}/management/ui-management/target/camel-management.war" todir="${release.dir}/jboss-5.1.0.GA/server/default/deploy" failonerror="true" /-->
		<mkdir dir="${release.dir}/jboss-5.1.0.GA/server/default/data"/>
		<copy file="${basedir}/profile.xml" todir="${release.dir}/jboss-5.1.0.GA/server/default/conf/bootstrap" failonerror="true" overwrite="true"/>

		<!--simulator-->
		<copy todir="${release.dir}/jboss-5.1.0.GA/server/simulator/deploy/restcomm-camel-gateway" failonerror="true">
			<fileset dir="${checkout.restcomm-camel.dir}/core/bootstrap/target/restcomm-camel-gateway">
				<include name="**" />
			</fileset>
		</copy>
		<!--RA's-->
		<copy file="${checkout.restcomm-slee.jss7-build.dir}/resources/cap/du/target/restcomm-slee-ra-cap-du-${restcomm-slee.ss7.tag}.jar" todir="${release.dir}/jboss-5.1.0.GA/server/simulator/deploy" failonerror="true" />
		<copy file="${checkout.restcomm-slee.http-build.dir}/resources/http-client/du/target/http-client-ra-DU-${restcomm-slee.http.ra.version}.jar" todir="${release.dir}/jboss-5.1.0.GA/server/simulator/deploy" failonerror="true" />
		<copy file="${checkout.restcomm-camel.dir}/core/slee/services-du/target/services-DU-${restcomm.camel.release.version}.jar" todir="${release.dir}/jboss-5.1.0.GA/server/simulator/deploy" failonerror="true" />
		<copy file="${checkout.restcomm-slee.http-build.dir}/resources/http-servlet/common/target/mobicents-slee-ra-http-servlet-common.jar" todir="${release.dir}/jboss-5.1.0.GA/server/simulator/deploy" failonerror="true" />
		<copy file="${checkout.restcomm-slee.http-build.dir}/resources/http-servlet/du/target/mobicents-slee-ra-http-servlet-DU-${restcomm-slee.http.ra.version}.jar" todir="${release.dir}/jboss-5.1.0.GA/server/simulator/deploy" failonerror="true" />

		<!--Others-->
		<!--copy file="${release.dir}/resources/map/restcomm-slee-ra-map-du-6.2.0.GA-RestComm.jar" todir="${release.dir}/jboss-5.1.0.GA/server/simulator/deploy" failonerror="true" /-->
		<!--copy file="${checkout.restcomm-camel.dir}/management/ui-management/target/camel-management.war" todir="${release.dir}/jboss-5.1.0.GA/server/simulator/deploy" failonerror="true" /-->
		<copy todir="${release.dir}/jboss-5.1.0.GA/server/simulator/data" failonerror="true">
			<fileset dir="${checkout.restcomm-camel.dir}/core/bootstrap/src/main/config/data">
				<include name="**" />
			</fileset>
		</copy>

		<copy file="${checkout.restcomm-camel.dir}/examples/http/target/camelgwhttpdemo.war" todir="${release.dir}/jboss-5.1.0.GA/server/simulator/deploy" failonerror="true" />

		<copy file="${basedir}/profile.xml" todir="${release.dir}/jboss-5.1.0.GA/server/simulator/conf/bootstrap" failonerror="true" overwrite="true"/>

		<!--tools-->
		<copy todir="${release.dir}/tools/restcomm-jss7-simulator" failonerror="true">
			<fileset dir="${checkout.restcomm-jss7.dir}/restcomm-jss7-${restcomm-jss7.version}/ss7/restcomm-ss7-simulator">
				<include name="**" />
			</fileset>
		</copy>

		<!-- tools : SCF-Server -->
		<copy todir="${release.dir}/tools/RestComm-SCF-Server/" failonerror="true">
			<fileset dir="${checkout.restcomm-camel.dir}/test/bootstrap/target/scf-server">
				<include name="**" />
			</fileset>
		</copy>


		<!--CLI-->
		<copy todir="${release.dir}/jboss-5.1.0.GA/" failonerror="true">
			<fileset dir="${checkout.restcomm-jss7.dir}/restcomm-jss7-${restcomm-jss7.version}/ss7/shell">
				<include name="**/*" />
			</fileset>
		</copy>
		<copy file="${checkout.restcomm-camel.dir}/core/oam/cli/target/camelgw-cli-${restcomm.camel.release.version}.jar" todir="${release.dir}/jboss-5.1.0.GA/lib" failonerror="true" />
		<copy todir="${release.dir}/jboss-5.1.0.GA/" failonerror="true">
			<fileset dir="${checkout.restcomm-jss7.dir}/restcomm-jss7-${restcomm-jss7.version}/ss7/shell">
				<include name="**/*" />
			</fileset>
		</copy>

		<!--logs-->
		<echo>Copy jboss-log4j*.xml</echo>
		<copy todir="${release.dir}/jboss-5.1.0.GA/server/default/deploy/restcomm-camel-gateway/log4j-templates" failonerror="true">
		        <fileset dir="${checkout.restcomm-camel.dir}/core/bootstrap/src/main/config/log4j">
		                <include name="**/*" />
		        </fileset>
		</copy>
		<copy todir="${release.dir}/jboss-5.1.0.GA/server/simulator/deploy/restcomm-camel-gateway/log4j-templates" failonerror="true">
		        <fileset dir="${checkout.restcomm-camel.dir}/core/bootstrap/src/main/config/log4j">
		                <include name="**/*" />
		        </fileset>
		</copy>

		<copy file="${checkout.restcomm-camel.dir}/core/bootstrap/src/main/config/log4j/jboss-log4j-default.xml" tofile="${release.dir}/jboss-5.1.0.GA/server/default/conf/jboss-log4j.xml" overwrite="true"></copy>
    	<copy file="${checkout.restcomm-camel.dir}/core/bootstrap/src/main/config/log4j/jboss-log4j-default.xml" tofile="${release.dir}/jboss-5.1.0.GA/server/simulator/conf/jboss-log4j.xml" overwrite="true"></copy>

		<!-- oam/new-ui - jolokia war & jss7-management-console.war-->
		<copy file="${checkout.restcomm-jss7.dir}/restcomm-jss7-${restcomm-jss7.version}/oam/new-ui/jolokia.war" todir="${release.dir}/jboss-5.1.0.GA/server/simulator/deploy" failonerror="true" />
		<copy file="${checkout.restcomm-jss7.dir}/restcomm-jss7-${restcomm-jss7.version}/oam/new-ui/jolokia.war" todir="${release.dir}/jboss-5.1.0.GA/server/default/deploy" failonerror="true" />
		<copy file="${checkout.restcomm-jss7.dir}/restcomm-jss7-${restcomm-jss7.version}/oam/new-ui/jss7-management-console.war" todir="${release.dir}/jboss-5.1.0.GA/server/simulator/deploy" failonerror="true" />
		<copy file="${checkout.restcomm-jss7.dir}/restcomm-jss7-${restcomm-jss7.version}/oam/new-ui/jss7-management-console.war" todir="${release.dir}/jboss-5.1.0.GA/server/default/deploy" failonerror="true" />


		<!-- jss7 config-->
		<copy file="${checkout.restcomm-camel.dir}/core/bootstrap/src/main/config/ss7-simulator/main_simulator2.xml" todir="${release.dir}/tools/restcomm-jss7-simulator/data" failonerror="true" />
		<copy file="${checkout.restcomm-camel.dir}/core/bootstrap/src/main/config/ss7-simulator/win_simulator2.xml" todir="${release.dir}/tools/restcomm-jss7-simulator/data" failonerror="true" />

	</target>

	<target name="build-docs">
		<exec failonerror="true" executable="${mvn.executable}" dir="${checkout.restcomm-camel.dir}/docs">
			<arg line="${release.build.goals} -Dmaven.test.skip=true" />
		</exec>
	</target>

	<target name="copy-docs">
		<!--docs-->
		<mkdir dir="${bundle.docs.dir}"/>

		<copy toDir="${bundle.docs.dir}/slee" overwrite="true">
			<fileset dir="${docs.dir}">
				<include name="**" />
			</fileset>
		</copy>
		<copy toDir="${docs.dir}/slee" overwrite="true" flatten="true">
			<fileset dir="${bundle.docs.dir}/slee">
				<include name="**/*.pdf" />
			</fileset>
		</copy>

		<mkdir dir="${docs.dir}/jss7"/>
		<mkdir dir="${docs.dir}/camel"/>
		<copy todir="${docs.dir}/jss7" failonerror="true">
			<fileset dir="${checkout.restcomm-jss7.dir}/restcomm-jss7-${restcomm-jss7.version}/_docs/">
				<include name="*User_Guide.pdf" />
			</fileset>
		</copy>
		<copy todir="${docs.dir}/camel" failonerror="true" flatten="true">
			<fileset dir="${checkout.restcomm-camel.dir}/docs/">
				<include name="**/*.pdf" />
			</fileset>
		</copy>

	</target>


	<target name="make-final-zip" depends="set-time-stamp">
		<zip destfile="${base.dir}/RestComm-camel-${restcomm.camel.release.version}-${time.stamp}.zip" filesonly="false">
			<zipfileset dir="${release.dir}" prefix="RestComm-camel-${restcomm.camel.release.version}">
				<include name="**" />
			</zipfileset>
		</zip>
	</target>

	<target name="set-time-stamp" unless="skip.timestamp">
		<tstamp>
			<format property="time.stamp" pattern="yyMMddHHmm" />
		</tstamp>
	</target>

	<target name="bundle-documentation" >
		<echo>bundling documentation</echo>

		<!--delete dir="${bundle.docs.dir}/slee/resources/map"/>    	
		<copy todir="${bundle.docs.dir}/slee/resources/map" failonerror="true">
		        <fileset dir="${docs.dir}/resources/map">
		                <include name="**" />
		        </fileset>
		</copy-->

		<delete dir="${bundle.docs.dir}/slee/tools/slee-management-console"/>
		<mkdir dir="${bundle.docs.dir}/jss7"/>
		<mkdir dir="${bundle.docs.dir}/camel"/>
		<copy todir="${bundle.docs.dir}/jss7" failonerror="true">
			<fileset dir="${checkout.restcomm-jss7.dir}/restcomm-jss7-${restcomm-jss7.version}/_docs/">
				<include name="**" />
			</fileset>
		</copy>
		<copy todir="${bundle.docs.dir}/camel/adminguide" failonerror="true">
			<fileset dir="${checkout.restcomm-camel.dir}/docs/adminguide/jdocbook-restcomm/target/docbook/publish/">
				<include name="**"/>
			</fileset>
		</copy>
		<copy todir="${bundle.docs.dir}/camel/installationguide" failonerror="true">
			<fileset dir="${checkout.restcomm-camel.dir}/docs/installationguide/jdocbook-restcomm/target/docbook/publish/">
				<include name="**"/>
			</fileset>
		</copy>
		<copy todir="${bundle.docs.dir}/camel/releasenotes" failonerror="true">
			<fileset dir="${checkout.restcomm-camel.dir}/docs/releasenotes/jdocbook-restcomm/target/docbook/publish/">
				<include name="**"/>
			</fileset>
		</copy>

		<zip destfile="${base.dir}/RestComm-camel-${restcomm.camel.release.version}-docs-${time.stamp}.zip" filesonly="false">
			<zipfileset dir="${bundle.docs.dir}" prefix="RestComm-camel-${restcomm.camel.release.version}/docs">
				<include name="**/*" />
			</zipfileset>
		</zip>
	</target>



</project>
