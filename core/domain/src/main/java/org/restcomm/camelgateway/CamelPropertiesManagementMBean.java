/**
 * TeleStax, Open Source Cloud Communications  Copyright 2012. 
 * and individual contributors
 * by the @authors tag. See the copyright.txt in the distribution for a
 * full listing of individual contributors.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
 */
package org.restcomm.camelgateway;

/**
 * @author amit bhayani
 */
public interface CamelPropertiesManagementMBean {

	public String getRoute();

	public void setRoute(String route);

	/**
	 * If there is no activity for noActivityTimeoutSec, CAMEL GW will send HTTP
	 * request to App indicating same and depending upon response take necessary
	 * action
	 * 
	 * @param notifyAfter
	 */
	public void setNoActivityTimeoutSec(int noActivityTimeoutSec);

	public int getNoActivityTimeoutSec();

	/**
	 * Once Application sends back HTTP response carrying CAP messages as XML
	 * payload to be sent to peer, Camel gateway will send these invokes to peer
	 * and assign InvokeId generated by Camel gateway.
	 * 
	 * HTTP Application wouldn't be aware of which invoke id belongs to which
	 * CAP message and hence if there are some error's reported by peer
	 * (carrying invoke id), HTTP application wouldn't know this error is for
	 * which invoke?
	 * 
	 * To avoid such situation set the updateAssignedInvokeIds to true so Camel
	 * gateway will send back HTTP request carrying all the assigned invokeId's
	 * as soon as it sends Invoke to peer
	 * 
	 * @param updateAssignedInvokeIds
	 */
	public void setUpdateAssignedInvokeIds(boolean updateAssignedInvokeIds);

	public boolean getUpdateAssignedInvokeIds();

}
